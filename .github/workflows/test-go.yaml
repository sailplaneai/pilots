# A basic workflow for Go
name: test-go
on: [push]
defaults:
  run:
    shell: bash -ieo pipefail {0}
    working-directory: go
jobs:
  test_matrix:
    strategy:
      matrix:
        subdir: ["agent", "kubedr"]
    name: golang test & build
    runs-on: [ubuntu-20.04]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        # TODO: We should try to speed this up by caching dependencies
        # https://github.com/actions/setup-go#caching-dependency-files-and-build-outputs
        with:
          go-version: '1.19.2' # The Go version to download (if necessary) and use.
      - name: test
        run: go test ./...
        env:
          # Explicitly set the GOPATH environment variable because some of our code depends on it.
          # You can determine the values here by running go env in a step to see how they are set.
          GOPATH: /home/runner/go
          GOCACHE: /home/runner/.cache/go-build
        working-directory: ${{ matrix.subdir }}
      - name: build
        run: mkdir -p .build && go build -o .build ./...
        working-directory: ${{ matrix.subdir }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          # https://github.com/golangci/golangci-lint/releases
          version: v1.50

          # Optional: working directory, useful for monorepos
          working-directory: ${{ matrix.subdir }}
          # These options work around the errors in this issue
          # https://github.com/golangci/golangci-lint-action/issues/244
          skip-pkg-cache: true
          skip-build-cache: true
      - name: Install and run tracecheck
        run: |
          go install github.com/george-maroun/tracecheck/cmd/tracecheck@latest
          $(go env GOPATH)/bin/tracecheck ./...
        working-directory: ${{ matrix.subdir }}